WITH cohorts AS (
  SELECT
    customer_id,
    DATE_TRUNC('month', signup_date) AS cohort_month
  FROM users
  WHERE signup_date >= DATE_TRUNC('year', CURRENT_DATE) - INTERVAL '1 year'
),
monthly_revenue AS (
  SELECT
    c.cohort_month,
    DATE_TRUNC('month', r.charge_date) AS revenue_month,
    SUM(r.amount) AS revenue
  FROM cohorts c
  JOIN charges r
    ON c.customer_id = r.customer_id
   AND r.charge_date BETWEEN c.cohort_month
                         AND c.cohort_month + INTERVAL '11 months' + INTERVAL '1 month' - INTERVAL '1 day'
  GROUP BY 1, 2
),
cohort_matrix AS (
  SELECT
    cohort_month,
    revenue_month,
    revenue,
    EXTRACT(MONTH FROM AGE(revenue_month, cohort_month)) + 1 AS month_index
  FROM monthly_revenue
),
ltv_forecast AS (
  SELECT
    cohort_month,
    AVG(revenue) OVER (PARTITION BY cohort_month ORDER BY month_index ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) 
      * 12.0 / MAX(month_index) 
      AS forecast_ltv
  FROM cohort_matrix
)
SELECT
  cohort_month,
  ROUND(SUM(revenue) OVER (PARTITION BY cohort_month ORDER BY month_index ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 2) AS cumulative_revenue,
  ROUND(MAX(forecast_ltv) OVER (PARTITION BY cohort_month), 2)                    AS forecast_ltv_12m
FROM cohort_matrix
LEFT JOIN ltv_forecast USING (cohort_month)
GROUP BY cohort_month, month_index, forecast_ltv
ORDER BY cohort_month;
